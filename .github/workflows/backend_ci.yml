name: Backend CI - Test, Build, and Push Images to ACR
#test changes

on:
  workflow_dispatch:  # Manual trigger
  push:  # Trigger when changes are pushed to the main branch
    branches:
      - main
    paths:
      - 'backend/**'  # Only trigger if changes are in the backend directory
      - '.github/workflows/backend_ci.yml'  # Trigger if this workflow file changes

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}  # The ACR login server URL from GitHub Secrets
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}  # Dynamically generate image tags based on Git SHA and Run ID

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner

    services:
      # PostgreSQL for Product DB
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      # PostgreSQL for Order DB
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Service Principal credentials from GitHub Secrets

      - name: Debug ACR Login Server
        run: echo "ACR Login Server ${{ secrets.AZURE_CONTAINER_REGISTRY }}"

      - name: Login to Azure Container Registry
        run: |
          echo "Logging into ACR..."
          az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}  # Ensure the correct secret is used here
          echo "Login complete."

      - name: Build and Push Product Service Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/product_service:latest ./backend/product_service/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/product_service:latest

      - name: Build and Push Order Service Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/order_service:latest ./backend/order_service/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/order_service:latest

      - name: Logout from Azure
        run: az logout
        if: always()
