#.github/workflows/cd.yml

name: CD - Deploy to AKS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/cd.yml'
      - 'k8s/**'

env:
  ACR_LOGIN_SERVER: purvaweek08.azurecr.io
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}
  RESOURCE_GROUP: deakin04
  AKS_CLUSTER: sit722week08

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER }} --overwrite-existing

      - name: Update Product Service Deployment
        run: |
          kubectl set image deployment/product-service product-service-container=${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/product-service --timeout=180s

      - name: Update Order Service Deployment
        run: |
          kubectl set image deployment/order-service order-service-container=${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/order-service --timeout=180s

      - name: Update Frontend Deployment
        run: |
          kubectl set image deployment/frontend frontend-container=${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/frontend --timeout=180s

      - name: Verify All Deployments
        run: kubectl get deployments -o wide
